Unit\AutoDJ\Genre
 [x] Genres of track can be stored
 [x] Tracks are ordered by popularity of genres within a vibe

Unit\AutoDJ\Tracks
 [x] Auto tracks of a vibe which belongs to its users can be stored
 [x] Auto tracks of a vibe which belongs to its users can be updated

Unit\AutoDJ\User
 [x] Authenticated user top tracks from the api are stored
 [x] Authenticated user recent tracks from the api that have been played more than once are stored
 [x] Authenticated user tracks from api can be updated

Unit\Controllers\AutoVibe
 [x] That the auto vibe refreshed event is triggered when a vibe is refreshed
 [x] That an auto vibe cannot be refreshed by a user who is not an owner of the vibe

Unit\Controllers\JoinRequest
 [x] User can send a request to join a vibe
 [x] Vibe owner gets the notification from join request
 [x] User can cancel the request to join a vibe
 [x] Vibe owner will not get a notification after join request has been cancelled
 [x] Sending a join request will trigger the join request event
 [x] Vibe owner can accept a join request
 [x] Vibe owner can reject a join request
 [x] Join request user gets notified after being accepted
 [x] Join request user gets notified after being rejected

Unit\Controllers\TrackVibe
 [x] That the track vibe stored event is called when a track is added to a vibe
 [x] That the track vibe destroyed event is called when a track is removed from a vibe

Unit\Controllers\VibeSynchronisation
 [x] That the vibe synchronised with playlist tracks event is triggered when user synchronises vibe with playlist tracks
 [x] That the playlist synchronised with vibe tracks event is triggered when user synchronises playlist with vibe tracks

Unit\Controllers\Vibe
 [x] Vibe requires a name to be created
 [x] Vibe requires a description to be created
 [x] Vibe created event is triggered when a vibe is created
 [x] Vibe created listener ensures that new vibe has auto related tracks based on its users tracks
 [ ] Vibe show view gets required data
 [ ] Vibe is shown with the right view
 [x] Vibe updated event is triggered when a vibe is updated

Unit\Controllers\Vote
 [x] That the track voted up event gets called when a track is voted up
 [x] That the track voted down event gets called when a track is voted down

Unit\Models\Genre
 [x] The with tracks auto related scope gets the genres with tracks that are auto related to a vibe  and the tracks count
 [x] The order by popularity scope is a query to get genres of vibe and orders them based on their track count from highest to lowest

Unit\Models\Track
 [x] The auto related to scope is a query to get the auto related tracks of a vibe
 [x] The scope belongs to members of is a query to get tracks that belongs to members of a vibe
 [x] The votes count on method returns the count for the number of votes of track on a vibe
 [x] The is voted by auth user on method checks if a user has voted has voted for a track

Unit\Models\User
 [ ] The request notifications method gets a users unread notifications based on the join requests made to the vibe he owns
 [ ] The last unread request notification for a join request gets the last unread join request notification
 [x] The is authorised with method checks if a user is authorised with an api or not
 [x] The scope is member of vibe is a query to get the users who are members of a vibe

Unit\Models\Vibe
 [x] The show tracks method gets the right tracks
 [x] The show tracks method for a manual vibe orders tracks based on their number of votes and relationship created at date
 [x] The has member function checks if a user is a member of a vibe or not
 [x] The has join request from method checks if a vibe has a join request from a user or not
 [x] The join request from method gets the join request from given user
 [x] The get owner attribute method gets the owner of a vibe
 [x] The get path attribute method gets the path of a vibe

Unit\MusicAPI\Playlist
 [x] The playlist load method checks if a vibe is synced with its playlist and returns false if its not
 [x] The playlist load method checks if a vibe is synced with its playlist and returns true if it is

Unit\MusicAPI\Tracks
 [x] The tracks load method loads all tracks from the api based on given tracks from database
 [ ] The tracks check method adds all the vibes of the authenticated user to a track which that track belongs to and also adds that tracks vibon id

Unit\MusicAPI\User
 [x] The top tracks method gets users top tracks and adds a top track type attribute to the tracks
 [x] The recent top tracks method gets users recent tracks and uniquely selects ones played more than and adds a recent track type attribute to the tracks
 [x] The recent top and overall top tracks method uniquely merges top and recent top tracks together
 [x] The track suggestions methods gets track suggestions

Unit\Providers\AppServiceProvider
 [ ] All views have the user variable

Unit\Traits\VibeShow
 [x] The show response method returns the loaded vibe with its updated attributes and a message
 [x] The update attributes method updates the attributes of a loaded vibe

Feature\Controllers\Authorise
 [x] User trying to be authorised with spotify is redirected to the spotify authorisation url
 [x] Unauthenticated user who tries to access the welcome page can access the welcome page
 [x] Authenticated user who tries to access the welcome page is redirected to home

Feature\Controllers\AutoVibe
 [x] Auto tracks of a vibe can be updated

Feature\Controllers\Callback
 [x] Spotify callback stores a new users details and authenticates him
 [x] Spotify callback updates a previously authenticated users details instead of adding him as new

Feature\Controllers\Home
 [x] Home can be viewed by a user
 [x] Home is shown with the right view
 [ ] Home view gets required data

Feature\Controllers\JoinRequest
 [x] User can send a request to join a vibe and vibe owner will have the notification
 [x] User can cancel the request to join a vibe and vibe owner will no longer have the notification
 [x] A join request cannot be responded to by a user who is not the owner of the vibe
 [ ] Vibe owner can respond to a join request from a user
 [x] Vibe owner can accept a join request from a user
 [x] Vibe owner can reject a join request from a user

Feature\Controllers\Search
 [x] User can search for tracks and receives a response with the tracks updated vibon info
 [ ] User is redirected back if search is empty

Feature\Controllers\TrackVibe
 [x] Track can be added to a vibe
 [x] New track can be added to a vibe
 [x] Track can be removed from a vibe

Feature\Controllers\UserVibe
 [x] User can join a vibe
 [x] User can leave a vibe
 [x] User can be removed from a vibe

Feature\Controllers\VibeSynchronisation
 [x] Vibe and spotify playlist can be synchronised using tracks on playlist

Feature\Controllers\Vibe
 [x] Vibe can be created
 [ ] Vibe can be viewed by a user
 [ ] Vibe edit page cannot be accessed by a non member
 [x] Vibe cannot be updated by a non member
 [x] Vibe can be updated by a member
 [x] Vibe cannot be deleted by user who is not an owner
 [x] Vibe can be deleted by owner

Feature\Controllers\Vote
 [x] The store method stores a vote for a vibes track
 [x] The destroy method deletes a vote which belongs to vibes track

Feature\Middlewares\AuthenticationCheck
 [x] Unauthenticated user is redirected to welcome page by authenticate middleware

Feature\Middlewares\CheckUserTracks
 [x] User tracks are checked and updated by the middleware if his first track was created more than 24 hours ago

Feature\Middlewares\OnlyAjax
 [x] The only ajax middleware ensures that none xml http requests cannot hit the controllers
 [x] The only ajax middleware allows xml http requests to hit the controllers

